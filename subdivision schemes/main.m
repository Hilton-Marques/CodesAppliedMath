% Clear workspace
clear
close(findall(0,'Type','figure'));
clc;
addpath('Geometria');

coords = [-3 , -1.5 , 0;...
    3 , -1.5  , 0;...
    0 , 1.5 ,  0; 0,0,4];
inc = [ 3 , 2 , 1;...
    3 , 1 , 4;...
    4 , 2 , 3;...
    4 , 1 , 2];
% coords = [1, -.5, .5 ; 1, .4, -.5; .2, 0, 1;-1, .5, 1;-2., 0, -.2;...
%     -1., -.5, .5; .5, -1, -1 ; -.25000000000000000000, -.18333333333333333333, .5000000000e-1;...
%     -.3,-.2,.3; -.5,-.1,0.4 ; -.4,-.3,.5 ; 0,0,.6 ];
% inc = [ 1, 2, 3 ; 3, 2, 4 ; 5, 3, 4 ; 5, 6, 3 ; 3, 6, 7 ; 1, 3, 7 ; ...
%     8, 2, 1 ; 4, 2, 8 ; 4, 8, 5 ; 8, 6, 5 ; 7, 6, 8 ; 7, 8, 1 ; ...
%     9,10,11; 10,12,11 ; 9,11,12 ; 9,12,10 ];
% coords = [3,0,0;0,3,0;-3,0,0;0,-3,0;2,0,1;0,2,1;-2,0,1;0,-2,1;1,0,0;0,1,0;...
%     -1,0,0;0,-1,0;2.00000000000000,0,-1;0,2.00000000000000,-1;-2.00000000000000,0,-1;0,-2.00000000000000,-1];
% inc = [1,2,6;1,6,5;2,3,7;2,7,6;3,4,8;3,8,7;4,1,5;4,5,8;5,6,10;5,10,9;6,7,11;6,11,10;7,8,12;7,12,11;8,5,9;...
%     8,9,12;9,10,14;9,14,13;10,11,15;10,15,14;11,12,16;11,16,15;12,9,13;12,13,16;13,14,2;13,2,1;14,15,3;...
%     14,3,2;15,16,4;15,4,3;16,13,1;16,1,4];
% coords = [10 10 10; -10 10 10; 10 -10 10; -10 -10 10; 10 10 -10; -10 10 -10; 10 -10 -10; -10 -10 -10];
% inc = [1 2 3; 4 3 2; 1 3 5; 7 5 3; 1 5 2; 6 2 5; 8 6 7; 5 7 6; 8 7 4; 3 4 7; 8 4 6; 2 6 4];
coords = [0,0,(-5).*(50+(-10).*5.^(1/2)).^(-1/2);0,0,5.*(50+(-10).*5.^(1/2) ...
  ).^(-1/2);(-1).*(2.*(5+(-1).*5.^(1/2)).^(-1)).^(1/2),0,(-1).*(10+( ...
  -2).*5.^(1/2)).^(-1/2);(2.*(5+(-1).*5.^(1/2)).^(-1)).^(1/2),0,(10+ ...
  (-2).*5.^(1/2)).^(-1/2);(1/2).*(10+(-2).*5.^(1/2)).^(-1/2).*(1+ ...
  5.^(1/2)),(-1/2),(-1).*(10+(-2).*5.^(1/2)).^(-1/2);(1/2).*(10+(-2) ...
  .*5.^(1/2)).^(-1/2).*(1+5.^(1/2)),(1/2),(-1).*(10+(-2).*5.^(1/2)) ...
  .^(-1/2);(-1/2).*(10+(-2).*5.^(1/2)).^(-1/2).*(1+5.^(1/2)),(-1/2), ...
  (10+(-2).*5.^(1/2)).^(-1/2);(-1/2).*(10+(-2).*5.^(1/2)).^(-1/2).*( ...
  1+5.^(1/2)),(1/2),(10+(-2).*5.^(1/2)).^(-1/2);(-1/2).*(10+(-2).* ...
  5.^(1/2)).^(-1/2).*((-1)+5.^(1/2)),(-1/2).*((5+(-1).*5.^(1/2)).^( ...
  -1).*(5+5.^(1/2))).^(1/2),(-1).*(10+(-2).*5.^(1/2)).^(-1/2);(-1/2) ...
  .*(10+(-2).*5.^(1/2)).^(-1/2).*((-1)+5.^(1/2)),(1/2).*((5+(-1).* ...
  5.^(1/2)).^(-1).*(5+5.^(1/2))).^(1/2),(-1).*(10+(-2).*5.^(1/2)).^( ...
  -1/2);(1/2).*(10+(-2).*5.^(1/2)).^(-1/2).*((-1)+5.^(1/2)),(-1/2).* ...
  ((5+(-1).*5.^(1/2)).^(-1).*(5+5.^(1/2))).^(1/2),(10+(-2).*5.^(1/2) ...
  ).^(-1/2);(1/2).*(10+(-2).*5.^(1/2)).^(-1/2).*((-1)+5.^(1/2)),( ...
  1/2).*((5+(-1).*5.^(1/2)).^(-1).*(5+5.^(1/2))).^(1/2),(10+(-2).* ...
  5.^(1/2)).^(-1/2)];
inc = [2,12,8;2,8,7;2,7,11;2,11,4;2,4,12;5,9,1;6,5,1;10,6,1;3,10,1;9,3, ...
  1;12,10,8;8,3,7;7,9,11;11,5,4;4,6,12;5,11,9;6,4,5;10,12,6;3,8,10; ...
  9,7,3];
 coords = [10 10 10; -10 10 10; 10 -10 10; -10 -10 10; 10 10 -10; -10 10 -10; 10 -10 -10; -10 -10 -10];
 inc = [1 2 3; 4 3 2; 1 3 5; 7 5 3; 1 5 2; 6 2 5; 8 6 7; 5 7 6; 8 7 4; 3 4 7; 8 4 6; 2 6 4];
[points,heds,edges,elements] = buildMother(coords(1:end,:),inc(1:end,:));
nL = 7; %4 levels
solid = Solid(points,edges,heds,elements,nL);
file = 'box';
for i = 1:nL
solid.plot(i,[0.4,0.4,0.4],1.0); %by level
exportgraphics(gca,strcat(file,num2str(i),'.pdf'),'Resolution',500);%'ContentType','vector'
end
file = strcat(file,'_color');
q = readmatrix(strcat(file,'.txt'));
solid.plot(nL,[0.4,0.4,0.4],1.0,q); %by level
exportgraphics(gca,strcat(file,'.pdf'),'Resolution',500);%'ContentType','vector'
function [points,heds,edges,elements] = buildMother(coords,inc)
 nPts = size(coords,1);
 nFaces = size(inc,1);
 nEdges = nPts + nFaces - 2;
 nHeds = 2* nEdges; 
 points(nPts) = Point;
 heds = Hed.empty;
 edges = Edge.empty;
 elements(nFaces) = Face;
 
 for i = 1:nPts
     points(i) = Point(coords(i,:)', i);    
 end
 for i = 1:nFaces
     nHed = length(heds);
     next = [nHed+2,nHed+3,nHed+1];
     for j = 1:3
         nHed = length(heds);
         hedj = Hed([inc(i,j),inc(i,mod(j,3)+1)],nHed+1,i,next(j));
         heds(end+1) = hedj;
         pt = points(inc(i,j));
         ptStar = points(inc(i,mod(j,3)+1));
         pt.star(end+1) = ptStar;
         pt.hedStar(end+1) = hedj;
     end
     hedInc = nHed - 1; 
     elements(i) = Face(hedInc,heds, [2,0], 'T3');   
     pointsT3 = points(inc(i,:));
     elements(i).geometry = T3(pointsT3,pointsT3);
 end
 for pt = points
     pt.hed0 = pt.hedStar(1);
     for i = 1:length(pt.star)
         pti = pt.star(i);
         hedi = pt.hedStar(i);
         if (hedi.edgeId == -1)
             for j = 1:length(pti.star)
                 ptj = pti.star(j);
                 hedj = pti.hedStar(j);
                 if ptj.id == pt.id
                     nEdge = length(edges);
                     edges(end+1) = Edge(hedi,hedj, nEdge + 1);
                     hedi.edgeId = nEdge+1;
                     hedj.edgeId = nEdge+1;
                 end
             end
         end
     end
 end
end